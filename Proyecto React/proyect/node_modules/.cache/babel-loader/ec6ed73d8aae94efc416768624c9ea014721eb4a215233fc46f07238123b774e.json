{"ast":null,"code":"const mysql = require('mysql');\nconst express = require('express');\nconst session = require('express-session');\nconst path = require('path');\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: 'root',\n  password: '',\n  database: 'nodelogin'\n});\nconst app = express();\napp.use(session({\n  secret: 'secret',\n  resave: true,\n  saveUninitialized: true\n}));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.static(path.join(__dirname, 'static')));\n\n// http://localhost:3000/\napp.get('/', function (request, response) {\n  // Render login template\n  response.sendFile(path.join(__dirname + '/login.html'));\n});\n\n// http://localhost:3000/auth\napp.post('/auth', function (request, response) {\n  // Capture the input fields\n  let username = request.body.username;\n  let password = request.body.password;\n  // Ensure the input fields exists and are not empty\n  if (username && password) {\n    // Execute SQL query that'll select the account from the database based on the specified username and password\n    connection.query('SELECT * FROM accounts WHERE username = ? AND password = ?', [username, password], function (error, results, fields) {\n      // If there is an issue with the query, output the error\n      if (error) throw error;\n      // If the account exists\n      if (results.length > 0) {\n        // Authenticate the user\n        request.session.loggedin = true;\n        request.session.username = username;\n        // Redirect to home page\n        response.redirect('/home');\n      } else {\n        response.send('Incorrect Username and/or Password!');\n      }\n      response.end();\n    });\n  } else {\n    response.send('Please enter Username and Password!');\n    response.end();\n  }\n});\n\n// http://localhost:3000/home\napp.get('/home', function (request, response) {\n  // If the user is loggedin\n  if (request.session.loggedin) {\n    // Output username\n    response.send('Welcome back, ' + request.session.username + '!');\n  } else {\n    // Not logged in\n    response.send('Please login to view this page!');\n  }\n  response.end();\n});\napp.listen(3000);","map":{"version":3,"names":["mysql","require","express","session","path","connection","createConnection","host","user","password","database","app","use","secret","resave","saveUninitialized","json","urlencoded","extended","static","join","__dirname","get","request","response","sendFile","post","username","body","query","error","results","fields","length","loggedin","redirect","send","end","listen"],"sources":["C:/Users/ignac/source/repos/proyect/src/App.js"],"sourcesContent":["const mysql = require('mysql');\nconst express = require('express');\nconst session = require('express-session');\nconst path = require('path');\n\nconst connection = mysql.createConnection({\n\thost: 'localhost',\n\tuser: 'root',\n\tpassword: '',\n\tdatabase: 'nodelogin'\n});\n\nconst app = express();\n\napp.use(session({\n\tsecret: 'secret',\n\tresave: true,\n\tsaveUninitialized: true\n}));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(express.static(path.join(__dirname, 'static')));\n\n// http://localhost:3000/\napp.get('/', function (request, response) {\n\t// Render login template\n\tresponse.sendFile(path.join(__dirname + '/login.html'));\n});\n\n// http://localhost:3000/auth\napp.post('/auth', function (request, response) {\n\t// Capture the input fields\n\tlet username = request.body.username;\n\tlet password = request.body.password;\n\t// Ensure the input fields exists and are not empty\n\tif (username && password) {\n\t\t// Execute SQL query that'll select the account from the database based on the specified username and password\n\t\tconnection.query('SELECT * FROM accounts WHERE username = ? AND password = ?', [username, password], function (error, results, fields) {\n\t\t\t// If there is an issue with the query, output the error\n\t\t\tif (error) throw error;\n\t\t\t// If the account exists\n\t\t\tif (results.length > 0) {\n\t\t\t\t// Authenticate the user\n\t\t\t\trequest.session.loggedin = true;\n\t\t\t\trequest.session.username = username;\n\t\t\t\t// Redirect to home page\n\t\t\t\tresponse.redirect('/home');\n\t\t\t} else {\n\t\t\t\tresponse.send('Incorrect Username and/or Password!');\n\t\t\t}\n\t\t\tresponse.end();\n\t\t});\n\t} else {\n\t\tresponse.send('Please enter Username and Password!');\n\t\tresponse.end();\n\t}\n});\n\n// http://localhost:3000/home\napp.get('/home', function (request, response) {\n\t// If the user is loggedin\n\tif (request.session.loggedin) {\n\t\t// Output username\n\t\tresponse.send('Welcome back, ' + request.session.username + '!');\n\t} else {\n\t\t// Not logged in\n\t\tresponse.send('Please login to view this page!');\n\t}\n\tresponse.end();\n});\n\napp.listen(3000);"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,OAAO,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAC1C,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMI,UAAU,GAAGL,KAAK,CAACM,gBAAgB,CAAC;EACzCC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAGT,OAAO,EAAE;AAErBS,GAAG,CAACC,GAAG,CAACT,OAAO,CAAC;EACfU,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,IAAI;EACZC,iBAAiB,EAAE;AACpB,CAAC,CAAC,CAAC;AACHJ,GAAG,CAACC,GAAG,CAACV,OAAO,CAACc,IAAI,EAAE,CAAC;AACvBL,GAAG,CAACC,GAAG,CAACV,OAAO,CAACe,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAC/CP,GAAG,CAACC,GAAG,CAACV,OAAO,CAACiB,MAAM,CAACf,IAAI,CAACgB,IAAI,CAACC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;;AAEvD;AACAV,GAAG,CAACW,GAAG,CAAC,GAAG,EAAE,UAAUC,OAAO,EAAEC,QAAQ,EAAE;EACzC;EACAA,QAAQ,CAACC,QAAQ,CAACrB,IAAI,CAACgB,IAAI,CAACC,SAAS,GAAG,aAAa,CAAC,CAAC;AACxD,CAAC,CAAC;;AAEF;AACAV,GAAG,CAACe,IAAI,CAAC,OAAO,EAAE,UAAUH,OAAO,EAAEC,QAAQ,EAAE;EAC9C;EACA,IAAIG,QAAQ,GAAGJ,OAAO,CAACK,IAAI,CAACD,QAAQ;EACpC,IAAIlB,QAAQ,GAAGc,OAAO,CAACK,IAAI,CAACnB,QAAQ;EACpC;EACA,IAAIkB,QAAQ,IAAIlB,QAAQ,EAAE;IACzB;IACAJ,UAAU,CAACwB,KAAK,CAAC,4DAA4D,EAAE,CAACF,QAAQ,EAAElB,QAAQ,CAAC,EAAE,UAAUqB,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAE;MACtI;MACA,IAAIF,KAAK,EAAE,MAAMA,KAAK;MACtB;MACA,IAAIC,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;QACvB;QACAV,OAAO,CAACpB,OAAO,CAAC+B,QAAQ,GAAG,IAAI;QAC/BX,OAAO,CAACpB,OAAO,CAACwB,QAAQ,GAAGA,QAAQ;QACnC;QACAH,QAAQ,CAACW,QAAQ,CAAC,OAAO,CAAC;MAC3B,CAAC,MAAM;QACNX,QAAQ,CAACY,IAAI,CAAC,qCAAqC,CAAC;MACrD;MACAZ,QAAQ,CAACa,GAAG,EAAE;IACf,CAAC,CAAC;EACH,CAAC,MAAM;IACNb,QAAQ,CAACY,IAAI,CAAC,qCAAqC,CAAC;IACpDZ,QAAQ,CAACa,GAAG,EAAE;EACf;AACD,CAAC,CAAC;;AAEF;AACA1B,GAAG,CAACW,GAAG,CAAC,OAAO,EAAE,UAAUC,OAAO,EAAEC,QAAQ,EAAE;EAC7C;EACA,IAAID,OAAO,CAACpB,OAAO,CAAC+B,QAAQ,EAAE;IAC7B;IACAV,QAAQ,CAACY,IAAI,CAAC,gBAAgB,GAAGb,OAAO,CAACpB,OAAO,CAACwB,QAAQ,GAAG,GAAG,CAAC;EACjE,CAAC,MAAM;IACN;IACAH,QAAQ,CAACY,IAAI,CAAC,iCAAiC,CAAC;EACjD;EACAZ,QAAQ,CAACa,GAAG,EAAE;AACf,CAAC,CAAC;AAEF1B,GAAG,CAAC2B,MAAM,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}